// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using femotor.Data;

#nullable disable

namespace femotor.Migrations
{
    [DbContext(typeof(FeMotorDBContext))]
    [Migration("20240117115644_Bir")]
    partial class Bir
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("femotor.Models.BodyType", b =>
                {
                    b.Property<int>("BodyTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BodyTypeID"), 1L, 1);

                    b.Property<string>("BodyTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("BodyTypeID");

                    b.ToTable("BodyTypes");

                    b.HasData(
                        new
                        {
                            BodyTypeID = 1,
                            BodyTypeName = "SuperSport"
                        },
                        new
                        {
                            BodyTypeID = 2,
                            BodyTypeName = "Naked"
                        },
                        new
                        {
                            BodyTypeID = 3,
                            BodyTypeName = "Scooter"
                        },
                        new
                        {
                            BodyTypeID = 4,
                            BodyTypeName = "Touring"
                        });
                });

            modelBuilder.Entity("femotor.Models.Brand", b =>
                {
                    b.Property<byte>("BrandID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("BrandID"), 1L, 1);

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("BrandID");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandID = (byte)1,
                            BrandName = "Yamaha"
                        },
                        new
                        {
                            BrandID = (byte)2,
                            BrandName = "Kawasaki"
                        },
                        new
                        {
                            BrandID = (byte)3,
                            BrandName = "BMW"
                        },
                        new
                        {
                            BrandID = (byte)4,
                            BrandName = "Suzuki"
                        },
                        new
                        {
                            BrandID = (byte)5,
                            BrandName = "Honda"
                        },
                        new
                        {
                            BrandID = (byte)6,
                            BrandName = "Ducati"
                        });
                });

            modelBuilder.Entity("femotor.Models.Color", b =>
                {
                    b.Property<byte>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ColorID"), 1L, 1);

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ColorID");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorID = (byte)1,
                            ColorName = "Beyaz"
                        },
                        new
                        {
                            ColorID = (byte)2,
                            ColorName = "Siyah"
                        },
                        new
                        {
                            ColorID = (byte)3,
                            ColorName = "Gri"
                        },
                        new
                        {
                            ColorID = (byte)4,
                            ColorName = "Mavi"
                        },
                        new
                        {
                            ColorID = (byte)5,
                            ColorName = "Kırmızı"
                        });
                });

            modelBuilder.Entity("femotor.Models.GearType", b =>
                {
                    b.Property<byte>("GearTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("GearTypeID"), 1L, 1);

                    b.Property<string>("GearTypeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("GearTypeID");

                    b.ToTable("GearTypes");

                    b.HasData(
                        new
                        {
                            GearTypeID = (byte)1,
                            GearTypeName = "Otomatik"
                        },
                        new
                        {
                            GearTypeID = (byte)2,
                            GearTypeName = "Manuel"
                        });
                });

            modelBuilder.Entity("femotor.Models.Motor", b =>
                {
                    b.Property<int>("MotorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MotorID"), 1L, 1);

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("BodyTypeID")
                        .HasColumnType("int");

                    b.Property<string>("BodyTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("EngineVolume")
                        .HasColumnType("smallint");

                    b.Property<string>("GearType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("ModelYear")
                        .HasColumnType("smallint");

                    b.Property<string>("MotorModel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MotorID");

                    b.ToTable("Motors");

                    b.HasData(
                        new
                        {
                            MotorID = 1,
                            BodyType = "SuperSport",
                            BodyTypeID = 1,
                            BodyTypeName = "SuperSport",
                            Brand = "Ducati",
                            Color = "Siyah",
                            EngineVolume = (short)600,
                            GearType = "Otomatik",
                            ModelYear = (short)2022,
                            MotorModel = "V4S",
                            Price = 500000m
                        },
                        new
                        {
                            MotorID = 2,
                            BodyType = "Naked",
                            BodyTypeID = 2,
                            BodyTypeName = "Naked",
                            Brand = "BMW",
                            Color = "Siyah",
                            EngineVolume = (short)990,
                            GearType = "Otamatik",
                            ModelYear = (short)2022,
                            MotorModel = "S1000RR",
                            Price = 5000000m
                        },
                        new
                        {
                            MotorID = 3,
                            BodyType = "Turing",
                            BodyTypeID = 4,
                            BodyTypeName = "Turing",
                            Brand = "BMW",
                            Color = "Siyah",
                            EngineVolume = (short)990,
                            GearType = "Manuel",
                            ModelYear = (short)2022,
                            MotorModel = "GS1000",
                            Price = 5000000m
                        },
                        new
                        {
                            MotorID = 4,
                            BodyType = "Scooter",
                            BodyTypeID = 3,
                            BodyTypeName = "Scooter",
                            Brand = "Yamaha",
                            Color = "Gri",
                            EngineVolume = (short)1100,
                            GearType = "Manuel",
                            ModelYear = (short)2022,
                            MotorModel = "R1",
                            Price = 450000m
                        });
                });

            modelBuilder.Entity("femotor.Models.Rolee", b =>
                {
                    b.Property<byte>("RoleeID")
                        .HasColumnType("tinyint");

                    b.Property<string>("RoleeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleeID");

                    b.ToTable("Rolees");

                    b.HasData(
                        new
                        {
                            RoleeID = (byte)1,
                            RoleeName = "Aday"
                        },
                        new
                        {
                            RoleeID = (byte)2,
                            RoleeName = "Uye"
                        },
                        new
                        {
                            RoleeID = (byte)3,
                            RoleeName = "Admin"
                        },
                        new
                        {
                            RoleeID = (byte)4,
                            RoleeName = "Supervisor"
                        });
                });

            modelBuilder.Entity("femotor.Models.Userr", b =>
                {
                    b.Property<int>("UserrID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserrID"), 1L, 1);

                    b.Property<string>("Emaill")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Passwordd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("RoleeID")
                        .HasColumnType("tinyint");

                    b.HasKey("UserrID");

                    b.HasIndex("RoleeID");

                    b.ToTable("Userrs");

                    b.HasData(
                        new
                        {
                            UserrID = 1,
                            Emaill = "aday@hotmail.com",
                            Passwordd = "123456",
                            RoleeID = (byte)1
                        },
                        new
                        {
                            UserrID = 2,
                            Emaill = "uye@hotmail.com",
                            Passwordd = "123456",
                            RoleeID = (byte)2
                        },
                        new
                        {
                            UserrID = 3,
                            Emaill = "admin@hotmail.com",
                            Passwordd = "123456",
                            RoleeID = (byte)3
                        },
                        new
                        {
                            UserrID = 4,
                            Emaill = "supervisor@hotmail.com",
                            Passwordd = "123456",
                            RoleeID = (byte)4
                        },
                        new
                        {
                            UserrID = 5,
                            Emaill = "uye2@hotmail.com",
                            Passwordd = "123456",
                            RoleeID = (byte)2
                        });
                });

            modelBuilder.Entity("femotor.Models.Userr", b =>
                {
                    b.HasOne("femotor.Models.Rolee", "Rolee")
                        .WithMany()
                        .HasForeignKey("RoleeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rolee");
                });
#pragma warning restore 612, 618
        }
    }
}
